#!/bin/bash -e

source /home/noyuno/tv/.env
user=noyuno
tvroot=/mnt/hddts0-plain0/tv
dst=$tvroot/mp4
src=$dst/2023/00_アニメ/
yearstart=2019
yearend=2023
filenum=0
movenum=0
errornum=0

if [ ! -d "$src" -o ! -d "$dst" ]; then
  echo "directory $src or $dst not exists" >&2
  exit 1
fi

declare -A keywords
for (( year=$yearstart; year <= $yearend; year++)); do
    keywords[$year]=$(find "$dst/$year" -mindepth 1 -maxdepth 1 -type d | sort | sed '/^.$/d' | awk -F/ '{print $NF}')
done

while read line; do
  filenum=$((filenum + 1))
  fname=$(basename "$line")
  #keywords loop
  for (( year=$yearstart; year <= $yearend; year++ )); do
    moved=0
    while read k; do
      #echo "line=$line, keywords[$year]=$k"
      if [ "$k" ]; then
        if [[ "$fname" =~ "$k" ]]; then
          d="$dst/$year/$k/$fname"
          if [ -e "$d" ]; then
            errornum=$((errornum + 1))
            echo "file $d already exists" >&1
          else
            movenum=$((movenum + 1))

            #update database
            dsrc=$(echo "$line" | sed -e "s|^$tvroot/||")
            ddst=$(echo "$d" | sed -e "s|^$tvroot/||")
            date=$(echo "$fname" | awk -F- '{print $1}')
            time=$(echo "$fname" | awk -F- '{print $2}')
            ch=$(echo "$fname" | awk -F- '{print $3}')
            sql="select * from video_file where filePath regexp '/$date-$time-$ch';"
            ret=$(mysql -u"$user" -p"$EPGSTATION_DB_PASS" epgstation -Ns -e "$sql")
            echo "sql=$sql, ret=$ret"
            if [ "$ret" ]; then
              sql="update video_file set filePath = '$ddst' where filePath regexp '/$date-$time-$ch';"
              ret=$(mysql -u"$user" -p"$EPGSTATION_DB_PASS" epgstation -Ns -e "$sql")
              echo -e "\e[1;34msql=$sql\e[m"
              sql="select * from video_file where filePath = '$ddst';"
              ret=$(mysql -u"$user" -p"$EPGSTATION_DB_PASS" epgstation -Ns -e "$sql")
              echo -e "\e[1;32msql=$sql\nret=$ret\e[m\n"
            fi
          fi
          moved=1
          mv -vn "$line" "$d"

          break
        fi
      fi
    done < <(echo "${keywords[$year]}")
    if [ $moved == 1 ]; then
        break
    fi
  done
done < <(find "$src" -maxdepth 1 -type f | sort)

message="ファイルの移動を完了しました。($movenum/$filenum,error:$errornum)"
echo "$message"
curl -XPOST -d '{
    "token": "'$NOTIFYD_TOKEN'",
    "message": "'$message'"
}' localhost:5050

