#!/bin/bash -e

set -e -o pipefail
USER=noyuno
source /home/$USER/tv/.env

echo '' >/tmp/nasbackup.log
SUCCESS_FLAG=0

finally() {
  echo 6: notify
  MESSAGE="NASバックアップが完了しました。"
  if [ $SUCCESS_FLAG = 0 ]; then
    MESSAGE="NASバックアップが失敗しました。"
  fi
  OUTPUT=$(cat /tmp/nasbackup.log | sed -z 's/\n/\\n/g' | sed 's/"/\\"/g' | sed "s/'/\\'/g" | tr -d '[:cntrl:]')
  curl -XPOST -d '{
    "message": "'"$MESSAGE"'\n'"$OUTPUT"'",
    "token": "'"$NOTIFYD_TOKEN"'"
    }' localhost:5050
}

trap finally EXIT

DEST=nas1
EXCLUDES="--exclude=.snapshots --exclude=.snapshots.2 --exclude=ts --exclude=delete --exclude=youtube --exclude=.git --exclude=@Recently-Snapshot --exclude=@Recycle"

#read -sp 'SSH password: ' password
(
echo 1: backup system
rootdev=/dev/disk/by-id/ata-KIOXIA-EXCERIA_SATA_SSD_50CB809CK501
epgdb=/mnt/hddts0-plain0/tv/backup/system/
sshcommand="ssh"
mkdir -p $epgdb
pushd $_ >/dev/null
  gdisk -l $rootdev > gdisk
  df -h > df
  cp /etc/fstab fstab
  pvdisplay > pvdisplay
  vgdisplay > vgdisplay
  lvdisplay > lvdisplay
  firewall-cmd --list-all-zones > firewall-all-zones
  #tar czf efi-vfat.tar.gz /boot/efi
  ##dump -0 -z -f boot-ext4dump.gz $rootdev-part1
  #tar czpf home.tar.gz --warning=no-file-changed --exclude .cache /home/$USER &&:
popd >/dev/null

echo 2: backup database
pushd /home/$USER/EPGStation >/dev/null
  npm run backup $epgdb/database >/dev/null
popd >/dev/null

# rsync
echo -n backup date:
date +%y%m%d-%H%M | tee -a /mnt/ssdki3-crypt0/private/nasbackup-date.txt \
                  | tee -a /mnt/hddts0-plain0/tv/nasbackup-date.txt

echo 3: copy home directory
mkdir -p /mnt/hddts0-plain0/tv/backup/home/$USER
chown $USER.$USER /mnt/hddts0-plain0/tv/backup/home/$USER
sudo -u $USER rsync -aH --no-inc-recursive --delete $EXCLUDES $* /home/$USER/ /mnt/hddts0-plain0/tv/backup/home/$USER &&:

echo 4: change owner
find /mnt/hddts0-plain0/tv/backup/system -not -path "*/.snapshots" -not -path "*/.snapshots/*" -not -type l -print0 | xargs -0 chown $USER.$USER
#find /mnt/ssdki3-crypt0/private -not -path "*/.snapshots" -not -path "*/.snapshots/*" -not -type l -print0 | xargs -0 chown $USER.$USER

echo 5: copy to nas

sudo -u $USER rsync --rsh="$sshcommand" -aH --no-inc-recursive --delete $EXCLUDES $* /mnt/ssdki3-crypt0/private/ $DEST:/share/private &&:
sudo -u $USER rsync  --rsh="$sshcommand" -aH --no-inc-recursive --delete $EXCLUDES $* /mnt/hddts0-plain0/tv/ $DEST:/share/tv1 &&:
) 2>&1 | tee /tmp/nasbackup.log &&:

SUCCESS_FLAG=1

